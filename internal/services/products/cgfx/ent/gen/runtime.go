// Code generated by ent, DO NOT EDIT.

package gen

import (
	"products/cgfx/ent/gen/comment"
	"products/cgfx/ent/gen/post"
	"products/cgfx/ent/gen/user"
	"products/cgfx/ent/gen/userlike"
	"products/cgfx/ent/gen/userpost"
	"products/cgfx/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescContent is the schema descriptor for content field.
	commentDescContent := commentFields[1].Descriptor()
	// comment.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	comment.ContentValidator = commentDescContent.Validators[0].(func(string) error)
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentFields[2].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	// commentDescUpdatedAt is the schema descriptor for updated_at field.
	commentDescUpdatedAt := commentFields[3].Descriptor()
	// comment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	comment.DefaultUpdatedAt = commentDescUpdatedAt.Default.(func() time.Time)
	// comment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	comment.UpdateDefaultUpdatedAt = commentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// commentDescID is the schema descriptor for id field.
	commentDescID := commentFields[0].Descriptor()
	// comment.IDValidator is a validator for the "id" field. It is called by the builders before save.
	comment.IDValidator = commentDescID.Validators[0].(func(int) error)
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescTitle is the schema descriptor for title field.
	postDescTitle := postFields[1].Descriptor()
	// post.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	post.TitleValidator = postDescTitle.Validators[0].(func(string) error)
	// postDescContent is the schema descriptor for content field.
	postDescContent := postFields[2].Descriptor()
	// post.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	post.ContentValidator = postDescContent.Validators[0].(func(string) error)
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postFields[3].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescUpdatedAt is the schema descriptor for updated_at field.
	postDescUpdatedAt := postFields[4].Descriptor()
	// post.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	post.DefaultUpdatedAt = postDescUpdatedAt.Default.(func() time.Time)
	// post.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	post.UpdateDefaultUpdatedAt = postDescUpdatedAt.UpdateDefault.(func() time.Time)
	// postDescStatus is the schema descriptor for status field.
	postDescStatus := postFields[5].Descriptor()
	// post.DefaultStatus holds the default value on creation for the status field.
	post.DefaultStatus = schema.Status(postDescStatus.Default.(string))
	// postDescID is the schema descriptor for id field.
	postDescID := postFields[0].Descriptor()
	// post.IDValidator is a validator for the "id" field. It is called by the builders before save.
	post.IDValidator = postDescID.Validators[0].(func(int) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[1].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPasswordHash is the schema descriptor for password_hash field.
	userDescPasswordHash := userFields[3].Descriptor()
	// user.PasswordHashValidator is a validator for the "password_hash" field. It is called by the builders before save.
	user.PasswordHashValidator = userDescPasswordHash.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[5].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescIsActive is the schema descriptor for is_active field.
	userDescIsActive := userFields[6].Descriptor()
	// user.DefaultIsActive holds the default value on creation for the is_active field.
	user.DefaultIsActive = userDescIsActive.Default.(bool)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.IDValidator is a validator for the "id" field. It is called by the builders before save.
	user.IDValidator = userDescID.Validators[0].(func(int) error)
	userlikeFields := schema.UserLike{}.Fields()
	_ = userlikeFields
	// userlikeDescUserID is the schema descriptor for user_id field.
	userlikeDescUserID := userlikeFields[1].Descriptor()
	// userlike.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	userlike.UserIDValidator = userlikeDescUserID.Validators[0].(func(int) error)
	// userlikeDescPostID is the schema descriptor for post_id field.
	userlikeDescPostID := userlikeFields[2].Descriptor()
	// userlike.PostIDValidator is a validator for the "post_id" field. It is called by the builders before save.
	userlike.PostIDValidator = userlikeDescPostID.Validators[0].(func(int) error)
	// userlikeDescCreatedAt is the schema descriptor for created_at field.
	userlikeDescCreatedAt := userlikeFields[3].Descriptor()
	// userlike.DefaultCreatedAt holds the default value on creation for the created_at field.
	userlike.DefaultCreatedAt = userlikeDescCreatedAt.Default.(func() time.Time)
	// userlikeDescID is the schema descriptor for id field.
	userlikeDescID := userlikeFields[0].Descriptor()
	// userlike.IDValidator is a validator for the "id" field. It is called by the builders before save.
	userlike.IDValidator = userlikeDescID.Validators[0].(func(int) error)
	userpostFields := schema.UserPost{}.Fields()
	_ = userpostFields
	// userpostDescUserID is the schema descriptor for user_id field.
	userpostDescUserID := userpostFields[0].Descriptor()
	// userpost.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	userpost.UserIDValidator = userpostDescUserID.Validators[0].(func(int) error)
	// userpostDescPostID is the schema descriptor for post_id field.
	userpostDescPostID := userpostFields[1].Descriptor()
	// userpost.PostIDValidator is a validator for the "post_id" field. It is called by the builders before save.
	userpost.PostIDValidator = userpostDescPostID.Validators[0].(func(int) error)
	// userpostDescCreatedAt is the schema descriptor for created_at field.
	userpostDescCreatedAt := userpostFields[2].Descriptor()
	// userpost.DefaultCreatedAt holds the default value on creation for the created_at field.
	userpost.DefaultCreatedAt = userpostDescCreatedAt.Default.(func() time.Time)
	// userpostDescRole is the schema descriptor for role field.
	userpostDescRole := userpostFields[3].Descriptor()
	// userpost.DefaultRole holds the default value on creation for the role field.
	userpost.DefaultRole = schema.Role(userpostDescRole.Default.(string))
}
